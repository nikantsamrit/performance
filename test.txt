stage('Map Network Drive') {
            // Map network drive using net use command
            bat """
                net use ${networkDriveLetter} ${networkDrive} /user:${username} ${password}
            """
        }
 
        stage('Push Files to Network Drive') {
            // Use copy command to push files to network drive
            bat """
                xcopy /E /I /Y ${sourceDirectory}\\* ${networkDriveLetter}\\
            """

bat " xcopy /E /I /Y" + "${sourceDirectory}\\*" +  "${networkDriveLetter}\\"
        }
    ${__CSVRead(products.csv, 0, ${__Random(1, 10)})}  
${__groovy(vars.get('myVar'))}



import javax.swing.JOptionPane
import org.apache.jorphan.exec.KeyToolUtils

// Prompt the user for confirmation
int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to run the test?", "Confirmation", JOptionPane.YES_NO_OPTION)

if (response != JOptionPane.YES_OPTION) {
    // Stop the test if the user selects "No"
    log.info("Test execution cancelled by the user.")
    KeyToolUtils.stopEngineNow() // Stop the test immediately
}


******
import javax.swing.JOptionPane

// Display a confirmation dialog
int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to run the test?", "Confirmation", JOptionPane.YES_NO_OPTION)

// Check the user's response
if (response == JOptionPane.YES_OPTION) {
    // User clicked "Yes" - continue with the test
    log.info("User confirmed - proceeding with the test.")
} else {
    // User clicked "No" - stop the test
    log.info("User canceled - stopping the test.")
    SampleResult.setStopTest(true) // Stop the test
}

****
import javax.swing.JOptionPane

// Display a confirmation dialog
int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to run the test?", "Confirmation", JOptionPane.YES_NO_OPTION)

// Check the user's response
if (response == JOptionPane.YES_OPTION) {
    // User clicked "Yes" - continue with the test
    log.info("User confirmed - proceeding with the test.")
} else {
    // User clicked "No" - stop the test
    log.info("User canceled - stopping the test.")
    prev.setStopTest(true) // Stop the test
}

*****
import javax.swing.JOptionPane
import javax.swing.SwingUtilities
import org.apache.jmeter.threads.JMeterContextService

log.info("JSR223 PreProcessor is running...") // Debugging line

// Use SwingUtilities to ensure the dialog runs on the EDT
SwingUtilities.invokeAndWait(new Runnable() {
    void run() {
        // Show confirmation dialog
        int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to run the test?", "Confirm", JOptionPane.YES_NO_OPTION)

        log.info("User response: " + response) // Debugging line

        // Cancel test execution if the user clicks "No"
        if (response != JOptionPane.YES_OPTION) {
            log.error("Test execution cancelled by user.") // Debugging line
            JMeterContextService.getContext().getEngine().stopTest(true) // Stop all threads
            throw new Exception("Test execution cancelled by user.")
        }
    }
})



import java.util.Date

// Get the current time
def now = new Date()

// Define the target time (7 PM)
def targetTime = new Date(now.year, now.month, now.date, 19, 0, 0) // 19:00 = 7 PM

// Check if the current time is before 7 PM
if (now.before(targetTime)) {
    log.info("Current time is before 7 PM. Stopping the test.")
    ctx.getEngine().stopTest(true) // Stop the test gracefully
} else {
    log.info("Current time is 7 PM or later. Proceeding with the test.")
}
